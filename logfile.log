{"message":"Something failed during startup","stack":"Error: Something failed during startup\n    at Object.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\index.js:24:7)\n    at Module._compile (internal/modules/cjs/loader.js:776:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:829:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)","level":"error","timestamp":"2019-12-12T18:27:36.879Z"}
{"message":"something failed miserably","stack":"Error: something failed miserably\n    at Object.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\index.js:29:26)\n    at Module._compile (internal/modules/cjs/loader.js:776:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:829:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:622:3)","level":"error","timestamp":"2019-12-12T18:36:02.293Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:51:06.849Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:51:50.349Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:53:56.415Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:54:29.318Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:55:11.807Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:55:20.711Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:57:35.565Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:57:43.273Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:58:25.987Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:59:20.236Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:59:24.649Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T09:59:53.596Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:00:06.854Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:02:08.235Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:02:37.786Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:04:17.258Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:05:09.466Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:05:32.655Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:05:39.125Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:05:57.939Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-13T10:07:09.961Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:07:11.022Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-13T10:10:07.931Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2019-12-13T10:10:08.984Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T11:07:18.096Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2019-12-14T11:07:20.114Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T11:08:29.224Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2019-12-14T11:08:30.289Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:11:34.414Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T12:11:35.634Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:13:57.824Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:51:30.997Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:53:18.705Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:54:07.476Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:54:52.890Z"}
{"message":"Could not get genres","stack":"Error: Could not get genres\n    at Object.<anonymous>.router.get (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\routes\\genres.js:9:9)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at expressInit (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at query (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\application.js:174:10)\n    at Server.app (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (events.js:198:13)\n    at parserOnIncoming (_http_server.js:677:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:109:17)","level":"error","timestamp":"2019-12-14T12:54:52.985Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T12:55:54.484Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T12:55:55.519Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:01:19.140Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:01:20.246Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:30:29.043Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:30:30.094Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:32:41.411Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:32:42.478Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:33:20.422Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:33:21.465Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:36:08.589Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:36:09.656Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:50:04.568Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:50:05.636Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:50:45.469Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:50:46.531Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:52:22.320Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:52:23.371Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:53:16.555Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:53:17.587Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:54:37.943Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:54:39.008Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T13:55:07.675Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T13:55:08.732Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:05:42.937Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:05:44.005Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:08:52.261Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:08:53.344Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:09:21.840Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:09:22.920Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:12:16.135Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:12:17.218Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:1876:10)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:2131:8)\n    at model.Query._wrappedThunk [as _findOne] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-14T14:12:18.331Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:15:07.487Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:15:08.578Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:16:54.561Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:16:55.621Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:18:11.636Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:18:12.700Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:18:53.966Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:18:55.052Z"}
{"message":"Cannot read property 'params' of undefined","stack":"TypeError: Cannot read property 'params' of undefined\n    at validateId (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\middleware\\validObjectId.js:3:44)\n    at Object.<anonymous>.router.get (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\routes\\genres.js:48:3)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at expressInit (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at query (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\application.js:174:10)\n    at Server.app (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (events.js:198:13)\n    at parserOnIncoming (_http_server.js:677:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:109:17)","level":"error","timestamp":"2019-12-14T14:18:56.265Z"}
{"message":"Cannot read property 'params' of undefined","stack":"TypeError: Cannot read property 'params' of undefined\n    at validateId (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\middleware\\validObjectId.js:3:44)\n    at Object.<anonymous>.router.get (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\routes\\genres.js:48:3)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:47:12)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at expressInit (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\middleware\\init.js:40:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at query (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\middleware\\query.js:45:5)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at Function.handle (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\application.js:174:10)\n    at Server.app (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\express\\lib\\express.js:39:9)\n    at Server.emit (events.js:198:13)\n    at parserOnIncoming (_http_server.js:677:12)\n    at HTTPParser.parserOnHeadersComplete (_http_common.js:109:17)","level":"error","timestamp":"2019-12-14T14:18:56.280Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:20:36.320Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:20:37.407Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:26:04.932Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:26:05.994Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:26:20.602Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:26:21.659Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:26:38.951Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:26:40.007Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:31:37.436Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:31:38.545Z"}
{"message":"Genre validation failed: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).","errors":{"name":{"message":"Path `name` (`1234`) is shorter than the minimum allowed length (5).","name":"ValidatorError","properties":{"message":"Path `name` (`1234`) is shorter than the minimum allowed length (5).","type":"minlength","minlength":5,"path":"name","value":"1234"},"kind":"minlength","path":"name","value":"1234"}},"_message":"Genre validation failed","stack":"ValidationError: Genre validation failed: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).\n    at new ValidationError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\validation.js:31:11)\n    at model.Object.<anonymous>.Document.invalidate (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\document.js:2428:32)\n    at p.doValidate.skipSchemaValidators (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\document.js:2277:17)\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1064:9\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"ValidationError","level":"error","timestamp":"2019-12-14T14:31:39.705Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:33:07.837Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:33:08.887Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:34:40.557Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:34:41.595Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:43:29.399Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:43:30.454Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:44:55.612Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:44:56.671Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T14:47:13.652Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T14:47:14.705Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:26:13.037Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:26:14.101Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:27:17.903Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:27:18.962Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:27:43.960Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:27:45.028Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:28:02.027Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:28:03.090Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:29:12.516Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:29:13.568Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:33:04.333Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:33:05.384Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:51:18.521Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:51:19.592Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:52:57.254Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:52:58.320Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:55:09.459Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:55:10.527Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:56:59.922Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:57:00.987Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T15:59:24.527Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T15:59:25.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:14:09.307Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:14:10.357Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:15:00.831Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:15:01.898Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:15:03.440Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:15:04.464Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:17:53.823Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:17:54.735Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:17:54.869Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:17:55.809Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:18:45.816Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:18:45.894Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:18:46.873Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:18:46.980Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:19:06.861Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:19:07.010Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:19:07.931Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:19:08.114Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:19:23.349Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:19:23.380Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:19:24.404Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:19:24.488Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:21:38.238Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:21:39.056Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:21:39.280Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:21:40.149Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:22:18.667Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:22:18.704Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:22:19.721Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:22:19.796Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:25:18.656Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:25:19.463Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:25:19.696Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:25:20.561Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:34:32.705Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:34:32.788Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:34:33.742Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:34:33.901Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:35:09.036Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:35:10.091Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:35:48.472Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:35:49.537Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:45:19.116Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:45:20.173Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:45:46.099Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:45:47.147Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:47:52.860Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:47:53.921Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:48:50.722Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:48:51.768Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:49:25.066Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:49:25.906Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:49:26.116Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:49:27.011Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:50:21.560Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:50:22.610Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:51:47.524Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:51:48.336Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:51:48.562Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:51:49.436Z"}
{"level":"info","message":"Listening on port 5000...","timestamp":"2019-12-14T16:52:22.849Z"}
{"level":"info","message":"Listening on port 5000...","timestamp":"2019-12-14T16:52:22.907Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:52:23.927Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:52:24.031Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:52:42.187Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:52:42.292Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:52:43.242Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:52:43.413Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:54:42.053Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:54:43.112Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:54:43.124Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:54:43.136Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:55:34.863Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:55:35.902Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:55:38.675Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:56:45.518Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:56:46.313Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:56:46.566Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:56:47.374Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:59:32.987Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T16:59:33.012Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:59:34.025Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T16:59:34.057Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:00:14.377Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:00:15.256Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:00:15.413Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:00:16.321Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:03:34.749Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:03:35.601Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:03:35.800Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:03:36.660Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:13:53.245Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:13:53.277Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:13:54.286Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:13:54.334Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:16:14.320Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:16:15.408Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:16:15.406Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:16:15.422Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:16:46.040Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:16:46.879Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:16:47.078Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:16:48.003Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:17:14.439Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:17:14.542Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:17:15.489Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:17:15.592Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:17:29.123Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:17:29.249Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:17:30.183Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:17:30.317Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:17:49.841Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:17:49.974Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:17:50.908Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:17:51.009Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:18:38.889Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:18:38.944Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:18:39.948Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:18:40.002Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:19:04.653Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:19:05.705Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:19:05.762Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:19:05.781Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:19:24.838Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:19:25.914Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:19:26.007Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:19:26.023Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:19:47.924Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:19:47.954Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:19:48.993Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:19:49.008Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:21:20.666Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:21:21.701Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:21:22.619Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:21:22.669Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:21:35.480Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:21:36.372Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:21:36.520Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:21:37.424Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:21:51.738Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:21:52.638Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:21:52.787Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:21:53.687Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:23:08.579Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:23:08.612Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:23:09.638Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:23:09.662Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:23:30.383Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:23:31.445Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:23:31.465Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:23:31.479Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:23:55.335Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:23:55.440Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:23:56.402Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:23:56.493Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:34:04.348Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:34:04.422Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:34:05.403Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:34:05.512Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:39:07.771Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:39:07.962Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:39:08.811Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:39:09.038Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:42:10.016Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:42:11.097Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:42:11.121Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:42:11.155Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:57:56.963Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:57:58.025Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:57:58.449Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:57:58.464Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:58:40.004Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:58:41.077Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:58:41.142Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:58:41.165Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:59:06.415Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:59:07.467Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:59:08.650Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:59:08.665Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:59:24.433Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T17:59:24.474Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:59:25.469Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T17:59:25.557Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:00:30.497Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:00:30.766Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:00:31.553Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:00:31.834Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:02:10.600Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:02:11.646Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:02:12.712Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:02:12.737Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:03:32.795Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:03:33.862Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:03:35.075Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:03:35.093Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:03:58.478Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:03:59.529Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:04:00.583Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:04:00.608Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:04:17.667Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:04:17.910Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:04:18.778Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:04:19.210Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:04:35.083Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:04:36.324Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:04:37.409Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:04:37.460Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:04:59.613Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:05:00.865Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:05:01.048Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:05:01.079Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:05:16.316Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:05:16.462Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:05:17.380Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:05:17.519Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:05:42.631Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:05:43.778Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:05:44.902Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:05:44.923Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:06:04.311Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:06:05.370Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:06:06.456Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:06:06.478Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:06:25.342Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:06:26.465Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:06:26.481Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:06:26.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:06:49.497Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:06:50.536Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:06:50.738Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:06:50.753Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:07:09.151Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:07:10.206Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:07:10.304Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:07:10.321Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:07:25.681Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:07:26.714Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:07:26.949Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:07:26.963Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:07:53.822Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:07:54.869Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:07:55.976Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:07:55.994Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:08:20.650Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:08:21.692Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:08:21.894Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:08:21.921Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:08:41.293Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:08:42.346Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-14T18:08:42.350Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-14T18:08:43.418Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-15T12:25:58.735Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-15T12:25:59.830Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-15T12:25:59.856Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-15T12:25:59.874Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-15T12:26:04.042Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-15T12:26:05.105Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:08:42.811Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:08:44.092Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:08:44.101Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:08:44.718Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:08:44.873Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:11:31.735Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:11:31.986Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:11:32.775Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:11:33.082Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:11:33.691Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:14:09.279Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:14:09.363Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:14:10.401Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:14:10.488Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:14:23.130Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:14:24.212Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:14:24.332Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:14:24.350Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:14:25.897Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:15:39.868Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:15:40.933Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:15:41.088Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:15:41.102Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:20:40.874Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:20:40.897Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:20:41.966Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:20:41.982Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:20:41.982Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:20:42.040Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:22:19.829Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:22:19.914Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:22:20.923Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:22:20.947Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:22:21.031Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:22:21.049Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:23:58.491Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:23:58.505Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:23:59.589Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:23:59.601Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:23:59.655Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:23:59.656Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:46:41.919Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:46:42.070Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:46:43.132Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:46:43.172Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:46:43.145Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:46:43.167Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:49:08.472Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:49:08.741Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:49:09.515Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:49:09.796Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:49:17.595Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:49:18.678Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:49:48.523Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:49:49.603Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:49:50.239Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:49:50.381Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:49:51.317Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:49:51.450Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:50:27.192Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:50:27.296Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:50:28.239Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:50:28.362Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:06.940Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:08.031Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:08.271Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:09.346Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:21.919Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:22.102Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:23.000Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:23.072Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:23.088Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:23.167Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:37.739Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:38.923Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:51:39.173Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:51:40.215Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:54:51.859Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:54:51.978Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:54:52.970Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:54:53.046Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:54:53.084Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:54:53.099Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:55:35.303Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:55:36.349Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:55:36.425Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:55:36.440Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:55:38.485Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:56:11.785Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:56:12.683Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:56:12.831Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:56:13.730Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:56:38.441Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:56:39.632Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:56:41.037Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:56:41.061Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:56:42.287Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:57:24.164Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:57:25.105Z"}
{"message":"unsupported charset \"UTF-8\"","stack":"UnsupportedMediaTypeError: unsupported charset \"UTF-8\"\n    at C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\body-parser\\lib\\read.js:83:18\n    at invokeCallback (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\raw-body\\index.js:224:16)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"UnsupportedMediaTypeError","charset":"utf-8","type":"charset.unsupported","level":"error","timestamp":"2019-12-16T15:57:25.143Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:57:25.224Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:57:25.306Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:57:25.335Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:57:26.997Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:58:07.331Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:58:07.490Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:58:08.378Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:58:08.562Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:58:09.793Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:58:30.623Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T15:58:30.661Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:58:31.732Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T15:58:31.762Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:05:30.533Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:05:31.613Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:05:31.623Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:05:31.641Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:05:34.682Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:08:35.322Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:08:35.417Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:08:36.396Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:08:36.489Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:08:41.855Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:08:42.966Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:25:59.033Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:26:00.016Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:26:00.082Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:26:00.156Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:26:00.168Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:26:01.100Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:28:56.569Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:28:57.652Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:28:57.691Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:28:57.709Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:28:57.829Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:28:58.858Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:29:31.673Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:29:32.775Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:29:32.880Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:29:32.897Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:29:32.925Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:29:33.953Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:32:33.744Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:32:34.700Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:32:34.796Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:32:34.870Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:32:35.755Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:32:35.905Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:40:50.924Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:40:51.934Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:40:52.014Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:40:52.121Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:40:52.132Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:40:52.983Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:41:35.574Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:41:35.643Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:41:36.659Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:41:36.711Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:41:37.687Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:41:37.705Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T16:41:39.997Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T16:41:40.068Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:42:54.762Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:42:55.854Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:42:55.953Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:42:55.969Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:42:55.999Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:42:57.028Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T16:42:58.246Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T16:42:58.345Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:59:29.190Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:59:29.376Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:59:30.239Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:59:30.433Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T16:59:31.258Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T16:59:31.545Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T16:59:31.654Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T16:59:32.286Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:00:23.294Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:00:23.375Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:00:24.384Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:00:24.468Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:00:24.587Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:00:25.611Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:00:25.801Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:00:25.906Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:06:18.906Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:06:19.044Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:06:19.946Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:06:20.091Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:06:20.936Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:06:21.212Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:06:21.315Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:06:21.959Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:11:00.382Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:11:00.427Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:11:01.441Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:11:01.496Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:11:02.487Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:11:02.818Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:11:02.916Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:11:03.518Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:12:27.558Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:12:28.609Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:12:28.642Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:12:28.776Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:12:29.697Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:12:29.803Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:12:29.971Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:12:30.072Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:14:17.892Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:14:18.027Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:14:18.989Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:14:19.110Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:14:19.130Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:14:20.150Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:14:20.284Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:14:20.369Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:22:23.494Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:22:24.592Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:22:24.721Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:22:24.752Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:22:24.738Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:22:25.774Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:22:27.070Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:22:27.181Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:36:45.125Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:36:46.161Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:36:46.207Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:36:46.225Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:36:47.127Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:36:48.198Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:36:48.482Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:36:48.582Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:39:58.574Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:39:58.725Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:39:59.646Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:39:59.756Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:39:59.818Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:40:00.777Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:40:00.974Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:40:01.079Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:42:54.581Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:42:55.672Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:42:55.781Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:42:55.763Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:42:55.789Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:42:56.806Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:42:58.072Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:42:58.172Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:43:33.846Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:43:34.943Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:43:34.965Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:43:34.978Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:43:35.055Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:43:36.073Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:43:37.221Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:43:37.328Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:49:24.662Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:49:24.722Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:49:25.713Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:49:25.809Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:49:26.799Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:49:27.050Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:49:27.133Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:49:27.819Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:51:37.156Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:51:38.243Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:51:38.287Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:51:38.305Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:51:38.396Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:51:39.416Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:51:40.548Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:51:40.643Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:53:25.604Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:53:25.621Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:53:26.714Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:53:26.738Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:53:26.770Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:53:26.804Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:53:29.059Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:53:29.230Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:55:00.996Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:55:01.153Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:55:02.055Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:55:02.143Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:55:02.155Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:55:02.227Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:55:04.413Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:55:04.512Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:58:26.135Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:58:26.184Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:58:27.175Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:58:27.264Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T17:58:28.192Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:58:28.459Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T17:58:28.541Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T17:58:29.215Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:03:48.801Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:03:48.883Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:03:49.873Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:03:49.927Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:03:49.950Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:03:49.997Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:03:52.279Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:03:52.383Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:09:53.479Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:09:54.581Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:09:54.601Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:09:54.621Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:09:55.843Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:09:56.865Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:09:56.868Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:09:57.050Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:11:06.013Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:11:06.112Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:11:07.073Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:11:07.201Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:11:07.234Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:11:08.257Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:11:08.417Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:11:08.520Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:16:02.358Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:16:02.415Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:16:03.267Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:16:03.422Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:16:03.500Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:16:04.325Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:16:04.762Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:16:04.860Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:17:05.636Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:17:05.679Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:17:06.684Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:17:06.733Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:17:07.681Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:17:07.955Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:17:08.048Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:17:08.700Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:23:06.289Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:23:06.477Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:23:07.346Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:23:07.536Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:23:07.562Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:23:08.586Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:23:08.705Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:23:08.812Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:26:06.206Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2019-12-16T18:26:07.274Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:26:29.633Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:26:30.683Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:26:30.730Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:26:30.699Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:26:30.759Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:26:31.777Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:26:32.956Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:26:33.064Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:30:27.522Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:30:28.498Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:30:28.510Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:30:28.608Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:30:29.862Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:30:30.858Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:30:30.931Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:30:30.972Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:30:59.757Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:31:00.781Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:31:00.793Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:31:00.842Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_test...","timestamp":"2019-12-16T18:31:00.903Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-12-16T18:31:01.926Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3036:8)\n    at model.Query._wrappedThunk [as _findOneAndUpdate] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:31:03.032Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\error\\cast.js:39:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schema\\objectid.js:246:11)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:975:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1389:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1379:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\schematype.js:1358:15)\n    at cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\cast.js:315:32)\n    at model.Query.Object.<anonymous>.Query.cast (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4697:12)\n    at castQuery (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:4510:18)\n    at model.Query.Object.<anonymous>.Query._findAndModify (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3454:23)\n    at model.Query.<anonymous> (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\query.js:3417:8)\n    at model.Query._wrappedThunk [as _findOneAndRemove] (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\lib\\helpers\\query\\wrapThunk.js:16:8)\n    at process.nextTick (C:\\Users\\STANLAB\\Desktop\\practice\\fullstack\\vidly_app\\node_modules\\mongoose\\node_modules\\kareem\\index.js:369:33)\n    at process._tickCallback (internal/process/next_tick.js:61:11)","name":"CastError","level":"error","timestamp":"2019-12-16T18:31:03.134Z"}
